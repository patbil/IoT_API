import { SoftPWM } from 'raspi-soft-pwm';
import { IPWMConfig } from 'raspi-soft-pwm';
export interface IPWMFactory {
    createPWM: (config: number | string | IPWMConfig) => SoftPWM | PCA9685PWM;
}
export interface IPCA9685PWM {
    readonly ch: number;
    readonly board: number;
    readonly frequency: number;
    readonly dutyCycle: number;
    write(dutyCycle: number): void;
    on(): void;
    off(): void;
    allOff(): void;
    readonly range: number;
    readonly pins: number;
}
export declare class PCA9685PWM implements IPCA9685PWM {
    private static _pca9685;
    private _ch;
    private _board;
    get ch(): number;
    get board(): number;
    get frequency(): number;
    get dutyCycle(): number;
    get range(): number;
    get pins(): number;
    write(dutyCycle: number): void;
    private read;
    on(): void;
    off(): void;
    allOff(): void;
    constructor(config: number | string | IPWMConfig);
    destroy(): void;
}
export declare const module: IPWMFactory;
